{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usre\\\\Desktop\\\\react-node\\\\sample-react-h2bis\\\\src\\\\UpdateForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Table from \"./Table.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdateForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    customer_name: \"\",\n    designation: \"\",\n    mobile_no: \"\",\n    email: \"\",\n    address: \"\"\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Handle form submission and add data to the table\n    addDataToTable(formData);\n    // Clear the form fields\n    setFormData({\n      customer_name: \"\",\n      designation: \"\",\n      email: \"\",\n      mobile_no: \"\",\n      address: \"\"\n    });\n  };\n  const [mainFormData, setMainFormData] = useState({\n    customer_type: \"\",\n    reff_no: \"\",\n    title: \"\",\n    company_name: \"\",\n    cust_name: \"\",\n    identity_number: \"\",\n    open_balance: \"\",\n    sales_person: \"\",\n    posting_address: \"\",\n    billing_address: \"\",\n    // Add billing_address field\n    location1: \"\",\n    location2: \"\" // Add location2 field\n  });\n\n  const handleMainInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMainFormData({\n      ...mainFormData,\n      [name]: value\n    });\n  };\n  const handleMainFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:3001/api/save-data\", mainFormData);\n      if (response.data.message === \"Data saved successfully\") {\n        console.log(\"Data saved successfully\");\n      }\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n    }\n  };\n  const [tableData, setTableData] = useState([]);\n  const addDataToTable = formData => {\n    setTableData([...tableData, formData]);\n  };\n\n  // State for the duplicated addresses\n  const [duplicatedAddress, setDuplicatedAddress] = useState(\"\");\n  const [duplicatedLocation, setDuplicatedLocation] = useState(\"\");\n\n  // Handlers for duplicating addresses and locations\n  const handleDuplicateAddress = () => {\n    setMainFormData({\n      ...mainFormData,\n      billing_address: mainFormData.posting_address\n    });\n  };\n  const handleDuplicateLocation = () => {\n    setMainFormData({\n      ...mainFormData,\n      location2: mainFormData.location1\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleDuplicateAddress,\n      className: \"btn btn-primary\",\n      children: \"Duplicate Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleDuplicateLocation,\n      className: \"btn btn-primary\",\n      children: \"Duplicate Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: tableData,\n      handleMainInputChange: handleMainInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      name: \"Update\",\n      onClick: handleMainFormSubmit,\n      className: \"btn btn-primary\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateForm, \"NZIRjuSezeVESAN9FJ0jwd3bOGg=\");\n_c = UpdateForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"names":["React","useState","Table","axios","jsxDEV","_jsxDEV","UpdateForm","_s","formData","setFormData","customer_name","designation","mobile_no","email","address","handleInputChange","e","name","value","target","handleSubmit","preventDefault","addDataToTable","mainFormData","setMainFormData","customer_type","reff_no","title","company_name","cust_name","identity_number","open_balance","sales_person","posting_address","billing_address","location1","location2","handleMainInputChange","handleMainFormSubmit","response","post","data","message","console","log","error","tableData","setTableData","duplicatedAddress","setDuplicatedAddress","duplicatedLocation","setDuplicatedLocation","handleDuplicateAddress","handleDuplicateLocation","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/usre/Desktop/react-node/sample-react-h2bis/src/UpdateForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Table from \"./Table.js\";\r\nimport axios from \"axios\";\r\n\r\nexport const UpdateForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    customer_name: \"\",\r\n    designation: \"\",\r\n    mobile_no: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission and add data to the table\r\n    addDataToTable(formData);\r\n    // Clear the form fields\r\n    setFormData({\r\n      customer_name: \"\",\r\n      designation: \"\",\r\n      email: \"\",\r\n      mobile_no: \"\",\r\n      address: \"\",\r\n    });\r\n  };\r\n\r\n  const [mainFormData, setMainFormData] = useState({\r\n    customer_type: \"\",\r\n    reff_no: \"\",\r\n    title: \"\",\r\n    company_name: \"\",\r\n    cust_name: \"\",\r\n    identity_number: \"\",\r\n    open_balance: \"\",\r\n    sales_person: \"\",\r\n    posting_address: \"\",\r\n    billing_address: \"\", // Add billing_address field\r\n    location1: \"\",\r\n    location2: \"\", // Add location2 field\r\n  });\r\n\r\n  const handleMainInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setMainFormData({ ...mainFormData, [name]: value });\r\n  };\r\n\r\n  const handleMainFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3001/api/save-data\",\r\n        mainFormData\r\n      );\r\n\r\n      if (response.data.message === \"Data saved successfully\") {\r\n        console.log(\"Data saved successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving data:\", error);\r\n    }\r\n  };\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const addDataToTable = (formData) => {\r\n    setTableData([...tableData, formData]);\r\n  };\r\n\r\n  // State for the duplicated addresses\r\n  const [duplicatedAddress, setDuplicatedAddress] = useState(\"\");\r\n  const [duplicatedLocation, setDuplicatedLocation] = useState(\"\");\r\n\r\n  // Handlers for duplicating addresses and locations\r\n  const handleDuplicateAddress = () => {\r\n    setMainFormData({\r\n      ...mainFormData,\r\n      billing_address: mainFormData.posting_address,\r\n    });\r\n  };\r\n\r\n  const handleDuplicateLocation = () => {\r\n    setMainFormData({\r\n      ...mainFormData,\r\n      location2: mainFormData.location1,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Your form elements */}\r\n      <form onSubmit={handleSubmit}>{/* Your form fields */}</form>\r\n\r\n      {/* Button to duplicate address and location */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={handleDuplicateAddress}\r\n        className=\"btn btn-primary\"\r\n      >\r\n        Duplicate Address\r\n      </button>\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={handleDuplicateLocation}\r\n        className=\"btn btn-primary\"\r\n      >\r\n        Duplicate Location\r\n      </button>\r\n\r\n      {/* Your table component */}\r\n      <Table data={tableData} handleMainInputChange={handleMainInputChange} />\r\n\r\n      {/* Button to submit the main form */}\r\n      <button\r\n        type=\"button\"\r\n        name=\"Update\"\r\n        onClick={handleMainFormSubmit}\r\n        className=\"btn btn-primary\"\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}