{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $concat = GetIntrinsic('%Array.prototype.concat%');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar $slice = callBound('Array.prototype.slice');\nvar hasSymbols = require('has-symbols/shams')();\nvar isConcatSpreadable = hasSymbols && Symbol.isConcatSpreadable;\nvar empty = [];\nvar $concatApply = isConcatSpreadable ? callBind.apply($concat, empty) : null;\nvar $concatCall = isConcatSpreadable ? null : callBind($concat, empty);\nvar isArray = isConcatSpreadable ? require('isarray') : null;\nmodule.exports = isConcatSpreadable\n// eslint-disable-next-line no-unused-vars\n? function safeArrayConcat(item) {\n  for (var i = 0; i < arguments.length; i += 1) {\n    var arg = arguments[i];\n    if (arg && typeof arg === 'object' && typeof arg[isConcatSpreadable] === 'boolean') {\n      if (!empty[isConcatSpreadable]) {\n        empty[isConcatSpreadable] = true;\n      }\n      var arr = isArray(arg) ? $slice(arg) : [arg];\n      arr[isConcatSpreadable] = true; // shadow the property. TODO: use [[Define]]\n      arguments[i] = arr;\n    }\n  }\n  return $concatApply(arguments);\n} : $concatCall;","map":{"version":3,"names":["GetIntrinsic","require","$concat","callBind","callBound","$slice","hasSymbols","isConcatSpreadable","Symbol","empty","$concatApply","apply","$concatCall","isArray","module","exports","safeArrayConcat","item","i","arguments","length","arg","arr"],"sources":["C:/Users/usre/Desktop/react-node/sample-react-h2bis/node_modules/safe-array-concat/index.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $concat = GetIntrinsic('%Array.prototype.concat%');\n\nvar callBind = require('call-bind');\n\nvar callBound = require('call-bind/callBound');\nvar $slice = callBound('Array.prototype.slice');\n\nvar hasSymbols = require('has-symbols/shams')();\nvar isConcatSpreadable = hasSymbols && Symbol.isConcatSpreadable;\n\nvar empty = [];\nvar $concatApply = isConcatSpreadable ? callBind.apply($concat, empty) : null;\nvar $concatCall = isConcatSpreadable ? null : callBind($concat, empty);\n\nvar isArray = isConcatSpreadable ? require('isarray') : null;\n\nmodule.exports = isConcatSpreadable\n\t// eslint-disable-next-line no-unused-vars\n\t? function safeArrayConcat(item) {\n\t\tfor (var i = 0; i < arguments.length; i += 1) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg && typeof arg === 'object' && typeof arg[isConcatSpreadable] === 'boolean') {\n\t\t\t\tif (!empty[isConcatSpreadable]) {\n\t\t\t\t\tempty[isConcatSpreadable] = true;\n\t\t\t\t}\n\t\t\t\tvar arr = isArray(arg) ? $slice(arg) : [arg];\n\t\t\t\tarr[isConcatSpreadable] = true; // shadow the property. TODO: use [[Define]]\n\t\t\t\targuments[i] = arr;\n\t\t\t}\n\t\t}\n\t\treturn $concatApply(arguments);\n\t}\n\t: $concatCall;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIC,OAAO,GAAGF,YAAY,CAAC,0BAA0B,CAAC;AAEtD,IAAIG,QAAQ,GAAGF,OAAO,CAAC,WAAW,CAAC;AAEnC,IAAIG,SAAS,GAAGH,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAII,MAAM,GAAGD,SAAS,CAAC,uBAAuB,CAAC;AAE/C,IAAIE,UAAU,GAAGL,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAC/C,IAAIM,kBAAkB,GAAGD,UAAU,IAAIE,MAAM,CAACD,kBAAkB;AAEhE,IAAIE,KAAK,GAAG,EAAE;AACd,IAAIC,YAAY,GAAGH,kBAAkB,GAAGJ,QAAQ,CAACQ,KAAK,CAACT,OAAO,EAAEO,KAAK,CAAC,GAAG,IAAI;AAC7E,IAAIG,WAAW,GAAGL,kBAAkB,GAAG,IAAI,GAAGJ,QAAQ,CAACD,OAAO,EAAEO,KAAK,CAAC;AAEtE,IAAII,OAAO,GAAGN,kBAAkB,GAAGN,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI;AAE5Da,MAAM,CAACC,OAAO,GAAGR;AAChB;AAAA,EACE,SAASS,eAAeA,CAACC,IAAI,EAAE;EAChC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,IAAI,CAAC,EAAE;IAC7C,IAAIG,GAAG,GAAGF,SAAS,CAACD,CAAC,CAAC;IACtB,IAAIG,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,CAACd,kBAAkB,CAAC,KAAK,SAAS,EAAE;MACnF,IAAI,CAACE,KAAK,CAACF,kBAAkB,CAAC,EAAE;QAC/BE,KAAK,CAACF,kBAAkB,CAAC,GAAG,IAAI;MACjC;MACA,IAAIe,GAAG,GAAGT,OAAO,CAACQ,GAAG,CAAC,GAAGhB,MAAM,CAACgB,GAAG,CAAC,GAAG,CAACA,GAAG,CAAC;MAC5CC,GAAG,CAACf,kBAAkB,CAAC,GAAG,IAAI,CAAC,CAAC;MAChCY,SAAS,CAACD,CAAC,CAAC,GAAGI,GAAG;IACnB;EACD;EACA,OAAOZ,YAAY,CAACS,SAAS,CAAC;AAC/B,CAAC,GACCP,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}